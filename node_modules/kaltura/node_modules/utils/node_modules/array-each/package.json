{
  "name": "array-each",
  "description": "Loop over each item in an array and call the given function on every element.",
  "version": "0.1.1",
  "homepage": "https://github.com/jonschlinkert/array-each",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jonschlinkert/array-each.git"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/array-each/issues"
  },
  "license": {
    "type": "MIT",
    "url": "https://github.com/jonschlinkert/array-each/blob/master/LICENSE"
  },
  "files": [
    "index.js"
  ],
  "main": "index.js",
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {},
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "keywords": [],
  "readme": "# array-each [![NPM version](https://badge.fury.io/js/array-each.svg)](http://badge.fury.io/js/array-each)\n\n> Loop over each item in an array and call the given function on every element.\n\n## Install with [npm](npmjs.org)\n\n```bash\nnpm i array-each --save\n```\n\n## Usage\n\n```js\nvar each = require('array-each');\n\nvar result = [];\neach(['a', 'b', 'c'], function (ele) {\n  result.push(ele + ele);\n});\n\nconsole.log(result);\n//=> ['aa', 'bb', 'cc']\n```\n\nReturn `false` to \"break\" early:\n\n```js\nvar result = [];\neach(['a', 'b', 'c'], function (ele) {\n  if (ele === 'b') return false;\n  result.push(ele + ele);\n});\n\nconsole.log(result);\n//=> ['aa']\n```\n\n## API\n\n### [.each](index.js#L34)\n\nLoop over each item in an array and call the given function on every element.\n\n**Params**\n\n* `array` **{Array}**\n* `fn` **{Function}**\n* `thisArg` **{Object}**: Optionally pass a `thisArg` to be used as the context in which to call the function.\n* `returns` **{Array}**\n\n**Example**\n\n```js\neach(['a', 'b', 'c'], function (ele) {\n  return ele + ele;\n});\n//=> ['aa', 'bb', 'cc']\n\neach(['a', 'b', 'c'], function (ele, i) {\n  return i + ele;\n});\n//=> ['0a', '1b', '2c']\n```\n\n## Related projects\n\n* [arr-filter](https://github.com/jonschlinkert/arr-filter): Faster alternative to javascript's native filter method.\n* [arr-diff](https://github.com/jonschlinkert/arr-diff): Returns an array with only the unique values from the first array, by excluding all… [more](https://github.com/jonschlinkert/arr-diff)\n* [arr-map](https://github.com/jonschlinkert/arr-map): Faster, node.js focused alternative to JavaScript's native array map.\n* [arr-flatten](https://github.com/jonschlinkert/arr-flatten): Recursively flatten an array or arrays. This is the fastest implementation of array flatten.\n* [array-unique](https://github.com/jonschlinkert/array-unique): Return an array free of duplicate values. Fastest ES5 implementation.\n* [array-intersection](https://github.com/jonschlinkert/array-intersection): Return an array with the unique values present in _all_ given arrays using strict equality… [more](https://github.com/jonschlinkert/array-intersection)\n\n## Running tests\n\nInstall dev dependencies:\n\n```bash\nnpm i -d && npm test\n```\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/array-each/issues)\n\n## Author\n\n**Jon Schlinkert**\n\n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\n## License\n\nCopyright (c) 2015 Jon Schlinkert\nReleased under the MIT license.\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on April 28, 2015._\n\n<!-- reflinks generated by verb-reflinks plugin -->\n\n[assemble]: http://assemble.io\n[template]: https://github.com/jonschlinkert/template\n[verb]: https://github.com/assemble/verb",
  "readmeFilename": "README.md",
  "_id": "array-each@0.1.1",
  "dist": {
    "shasum": "821fc218cdad29ba008177a24468e663aacbc991"
  },
  "_from": "array-each@^0.1.1",
  "_resolved": "https://registry.npmjs.org/array-each/-/array-each-0.1.1.tgz"
}
